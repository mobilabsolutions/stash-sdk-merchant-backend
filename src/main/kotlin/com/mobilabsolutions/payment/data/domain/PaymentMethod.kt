package com.mobilabsolutions.payment.data.domain

import com.mobilabsolutions.payment.data.enum.PaymentMethodType
import org.springframework.data.util.ProxyUtils
import java.util.*
import javax.persistence.*

/**
 * @author <a href="mailto:jovana@mobilabsolutions.com">Jovana Veskovic</a>
 */
@Entity
@Table(name = "payment_method")
class PaymentMethod(
    @Id
    @Column(name = "id")
    var id: String?,

    @Column(name = "active")
    var active: Boolean?,

    @Column(name = "alias_id")
    var aliasId: String?,

    @Column(name = "alias")
    var alias: String?,

    @Enumerated(EnumType.STRING)
    @Column(name = "type")
    var type: PaymentMethodType?,

    @ManyToOne
    @JoinColumn(name = "user_id", nullable = false, foreignKey = ForeignKey(name = "fk_user_paymentmethod"))
    var user: User
) : AutoGeneratedIdTimeAuditable() {

    override fun hashCode(): Int {
        var hash = 7
        hash = 97 * hash + Objects.hashCode(this.id)
        return hash
    }

    override fun equals(other: Any?): Boolean {
        other ?: return false

        if (this === other) return true

        if (javaClass != ProxyUtils.getUserClass(other)) return false

        other as PaymentMethod

        return this.id == other.id
    }
    override fun toString(): String {
        return "PaymentMethod [id=$id, aliasId=$aliasId, alias=$alias, type=$type, user=$user]"
    }
}
